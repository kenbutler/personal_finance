@startuml

enum Necessity {
    CRITICAL
    NECESSARY
    EXCUSABLE
    EXTRAVAGANT
}

class Transaction {
    + date : date
    + amount : float
    + description : string
    + previous_value : float
    + confirmed : bool = False
}

class Expense {
    + necessity_level : Necessity
}

class Account {
    + name : string
    + number : int
    + website : string
    + phone : int
}

class Checking {
    + routing_number : int
}

class Savings {
    + routing_number : int
    + interest_rate : float
}

class MoneyMarket {
    + routing_number : int
    + interest_rate : float
}

class CreditCard {
    ' TODO
    + credit_limit : float
}

class IRA {
    ' TODO: Individual retirement account
}

class Traditional {
    ' TODO: Traditional IRA
}

class Roth {
    ' TODO: Roth IRA
}

' A collection of transactions could also be called a "ledger"
Expense --|> Transaction
Transaction "many" --* "1" Account

Account <|-- Checking
Account <|-- Savings
Account <|-- MoneyMarket
Account <|-- CreditCard
Account <|-- IRA
IRA <|-- Traditional
IRA <|-- Roth

@enduml